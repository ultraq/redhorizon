/*
 * Copyright 2020, Emanuel Rabina (http://www.ultraq.net.nz/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.gradle.internal.os.OperatingSystem

plugins {
	id 'redhorizon-build'
	id 'nz.net.ultraq.gradle.fluent-configuration'
}

var os = OperatingSystem.current()
var targetPlatform = findProperty('targetPlatform') ?:
	os == OperatingSystem.MAC_OS && System.getProperty('os.arch').startsWith('aarch64') ? 'macos-arm64' : 'windows'

// @formatter:off
configure {
	asGroovyApplicationProject() {
		mainClass = 'nz.net.ultraq.redhorizon.cli.RedHorizon'
		applicationName = 'redhorizon'
		applicationDefaultJvmArgs = ['-Dorg.lwjgl.system.stackSize=10240'] +
			(targetPlatform.startsWith('macos') ? ['-Dorg.lwjgl.glfw.libname=glfw_async'] : [])
	}
		.withJavaCompileOptions() {
			options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
		}
		.configureSource()
			.withDependencies() {
				implementation project(':redhorizon-classic')
				implementation project(':redhorizon-filetypes')
				implementation project(':redhorizon-explorer')
				implementation project(':redhorizon-shooter')
				implementation "ch.qos.logback:logback-core:${logbackVersion}"
				implementation "info.picocli:picocli:${picocliVersion}"
				implementation "org.apache.groovy:groovy-json:${groovyVersion}"
				implementation "org.joml:joml:${jomlVersion}"
				implementation "org.joml:joml-primitives:${jomlPrimitivesVersion}"
				implementation 'org.lwjgl:lwjgl-glfw'
				runtimeOnly "ch.qos.logback:logback-classic:${logbackVersion}"
			}
		.configureVerification()
			.withTestDependencies() {
				testImplementation 'com.github.valfirst:slf4j-test:3.0.1'
				testImplementation 'org.assertj:assertj-core:3.26.3'
			}

	createZipDistribution()
		.withDependenciesIn('libraries')
		.withSourcesIn('source')
		.withGroovydocsIn('groovydoc')
}
// @formatter:on

configurations {
	testRuntimeOnly {
		exclude group: 'ch.qos.logback'
	}
}
