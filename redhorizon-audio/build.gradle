/*
 * Copyright 2025, Emanuel Rabina (http://www.ultraq.net.nz/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'redhorizon-build'
}

description = 'Audio module for the Red Horizon project'

// @formatter:off
configure {
	asGroovyLibraryProject()
		.withJarOptions() {
			manifest {
				attributes 'Automatic-Module-Name': 'nz.net.ultraq.redhorizon.audio'
			}
		}
		.withSourcesJar()
		.withGroovydocJar()
		.configureSource()
			.withDependencies() {
				implementation "nz.net.ultraq:event-horizon:${eventHorizonVersion}"
				api 'org.lwjgl:lwjgl'
				api 'org.lwjgl:lwjgl-openal'

				['natives-macos-arm64', 'natives-windows'].each { natives ->
					runtimeOnly "org.lwjgl:lwjgl::${natives}"
					runtimeOnly "org.lwjgl:lwjgl-openal::${natives}"
				}
			}
		.configureVerification()
			.withTestDependencies() {
				testImplementation 'com.tagtraum:ffsampledsp-complete:0.9.53'
				testImplementation "org.slf4j:slf4j-simple:${slf4jVersion}"
			}

	createMavenPublication()
		.withArtifacts(jar, sourcesJar, groovydocJar)
		.configurePom() {
			url = 'https://github.com/ultraq/redhorizon'
			inceptionYear = '2025'
		}
			.useApache20License()
			.withGitHubScm('ultraq')
			.withDevelopers([
				name: 'Emanuel Rabina',
				email: 'emanuelrabina@gmail.com',
				url: 'https://www.ultraq.net.nz'
			])
		.publishToMavenCentral(
			findProperty('mavenCentral.publisher.username'),
			findProperty('mavenCentral.publisher.password'),
			'nz.net.ultraq'
		)
}
// @formatter:on
