/* 
 * Copyright 2007, Emanuel Rabina (http://www.ultraq.net.nz/)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id 'distribution'
}

// Global configuration
allprojects {
	group = 'nz.net.ultraq.redhorizon'
	version = '0.33.1'
}

// Root project configuration
description = 'Recreating the original 2D Command & Conquer games'

distributions {
	main {
		contents {
			from 'redhorizon-cli/build/install/redhorizon'
			from('.') {
				include 'CHANGELOG.md'
				include 'LICENSE.txt'
				include 'README.md'
			}
		}
	}
}

[distTar, distZip].each {
	it.dependsOn = [
		':redhorizon-cli:installDist'
	]
	it.duplicatesStrategy = 'exclude'
}

// Subproject configuration
subprojects {
	apply plugin: 'groovy'
	apply plugin: 'idea'
	apply from: 'https://raw.githubusercontent.com/ultraq/gradle-support/3.4.0/gradle-support.gradle'

	sourceCompatibility = 11
//	configurations.all {
//		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//		resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
//	}

	dependencies {
		implementation(
			'org.codehaus.groovy:groovy:3.0.7:indy',
			'org.slf4j:slf4j-api:1.7.30'
		)
		implementation('nz.net.ultraq.extensions:groovy-extensions:1.0.0') {
			exclude module: 'groovy'
		}
		implementation('nz.net.ultraq.extensions:profiling-extensions:0.6.0') {
			exclude module: 'groovy'
		}
		testImplementation('org.spockframework:spock-core:2.0-M4-groovy-3.0') {
			exclude group: 'org.codehaus.groovy'
		}
	}

	compileGroovy {
		groovyOptions.optimizationOptions.indy = true
	}

	test {
		useJUnitPlatform()
	}
}
